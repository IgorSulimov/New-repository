#include <string>
#include <fstream>
#include <vector>
#include <cctype>
#include <iomanip>
#include <stack>
#include <iostream>
using namespace std;

class parent
{
protected:
	string str;

public:
	virtual void start(string file_name) = 0;

	virtual ~parent() {};
};

class Avto1 : public parent
{
	void (Avto1::* q)(char ch);
public:
	Avto1() { q = &Avto1::q0; }
	int er_fl = 0;
	stack<int> stack;
	void start(string file_name)
	{
		ifstream in(file_name);
		if (!in)
		{
			cout << "Íå óäàëîñü îòêðûòü ôàéë " << file_name << endl;
		}
		char ch = in.get();
		int count_faill = 0;
		if (ch == EOF)
			cout << "GOOD";
		else
		{
			while (ch != EOF)
			{
				while (ch != '\n' && ch != EOF)
				{
					(this->*q)(ch);
					cout << ch;
					ch = in.get();
					if (er_fl == 0)
					{
						count_faill++;
					}
				}
				ch = in.get();
				if (er_fl == 0 && stack.size() == 0)
				{
					cout <<'\n' << "GOOD" << endl;

				}
				else
				{
					cout << '\n' << right << setw(count_faill) << '^';
					cout <<'\n' << "Bad" << endl;
					er_fl = 0;
				}
				while (stack.size() != 0)
				{
					stack.pop();
				}
				q = &Avto1::q0;
				count_faill = 0;
			}
		}
	}
	void q0(char ch)
	{
		switch (ch)
		{
		case '0': Error(); break;
		case '1':
			q = &Avto1::q1;
			stack.push(1);
			break;
		default:Error();
		}
	}
	void q1(char ch)
	{
		switch (ch)
		{
		case '0':
			if (stack.size() >= 1)
			{
				if (stack.top() == 1)
				{
					stack.pop();
					q = &Avto1::q2;
				}
				else
					Error();
			}
			else
				Error();
			break;
		case '1':
			q = &Avto1::q1;
			stack.push(1);
			break;
		}
	}
	void q2(char ch)
	{
		switch (ch)
		{
		case '0': 
			if (stack.size() >= 1)
			{
				if (stack.top() == 1)
				{
					stack.pop();
					q = &Avto1::q2;
				}
				else
					Error();
			}
			else
				Error();
			break;
		case '1':
			if (stack.size() == 0)
			{
				q = &Avto1::q1;
				stack.push(1);
			}
			else
				Error();
			break;
		default:Error();
		}
	}
	void Error()
	{
		er_fl = 1;
	}
};
int main()
{
	Avto1 obj;
	obj.start("i.txt");
	return 0;
}
